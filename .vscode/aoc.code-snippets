{
	// Place your advent-of-code-2022 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create tests for puzzle": {
		"scope": "python",
		"prefix": "sn-test",
		"body": [
			"import pytest",
			"",
			"from advent_of_code.constants import TEST_INPUT_PATH",
			"from advent_of_code.utils import load_input",
			"",
			"${TM_FILENAME_BASE}_INPUT_PATH = TEST_INPUT_PATH.joinpath(\"input_${TM_FILENAME_BASE}\")",
			"\n",
			"@pytest.fixture(scope=\"session\")",
			"def ${TM_FILENAME_BASE}_input():",
			"\treturn load_input(${TM_FILENAME_BASE}_INPUT_PATH)",
			"\n",
			"$0"
		],
		"description": "Create test for AOC puzzle"
	},
	"Create solution for puzzle": {
		"scope": "python",
		"prefix": "sn-puzzle",
		"body": [
			"\"\"\"Puzzle for advent of code 2022 day $1.\"\"\"",
			"",
			"from advent_of_code.constants import TWENTY_TWENTY_TWO_PATH",
			"from advent_of_code.utils import load_input",
			"",
			"",
			"def solve_puzzle():",
			"\tpuzzle_input_path = TWENTY_TWENTY_TWO_PATH.joinpath(\"${TM_FILENAME_BASE}_input\")",
			"\tpuzzle_input = load_input(puzzle_input_path)",
			"\tsolution_part_one = None",
			"\tsolution_part_two = None",
			"\tprint(",
			"\t\tf\"Solution for part one: {solution_part_one}\",",
			"\t\tf\"Solution for part two: {solution_part_two}\",",
			"\t\tsep=\"\\n\",",
			"\t)",
			"",
			"",
			"$0",
			"",
			"if __name__ == \"__main__\":",
			"\tsolve_puzzle()",
		],
		"description": "Create solution for AOC puzzle"
	}
}
